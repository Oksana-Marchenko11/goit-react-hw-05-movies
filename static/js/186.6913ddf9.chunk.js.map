{"version":3,"file":"static/js/186.6913ddf9.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCAAwCC,IADxC,cACjBE,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAkB,mCAAG,WAAMC,GAAN,uFACPP,EAAAA,EAAAA,IAAA,+BACKC,EADL,4DACgEM,IAFzD,cACxBJ,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,sDAOlBG,EAAe,mCAAG,WAAMC,GAAN,uFACJT,EAAAA,EAAAA,IAAA,gBACVS,EADU,oBACSR,EADT,oBADI,cACrBE,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAOfM,EAAU,mCAAG,WAAMD,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBACVS,EADU,4BACiBR,EADjB,oBADD,cAChBE,EADgB,yBAIfA,EAASC,KAAKO,MAJC,2CAAH,sDAOVC,EAAU,mCAAG,WAAMH,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBACVS,EADU,4BACiBR,EADjB,2BADD,cAChBE,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,qD,sFCcvB,UAzCgB,WACd,IAAQI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IAEXN,EAAAA,EAAAA,IAAWH,GACRW,MAAK,SAAAL,GACJC,EAAWD,EACZ,IACAM,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPP,GAAW,EACZ,GACJ,GAAE,CAACT,KAGF,gCACGQ,IAAW,SAAC,IAAD,IACQ,IAAnBF,EAAQW,SACP,0BACE,wBACGX,EAAQY,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QASL,IAAnBhB,EAAQW,SACP,uBAAG,qDAIV,C","sources":["api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '233297d4a0bf302b0bc846d2e5d7a397';\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const getSearchByKeyword = async keyword => {\n    const response = await axios.get(\n        `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n    );\n    return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getCredits = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getReviews } from 'api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getReviews(movieId)\n      .then(reviews => {\n        setReviews(reviews);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews.length !== 0 && (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <p>Sorry, there aren't any reviews for this movie</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["axios","API_KEY","getTrending","response","data","results","getSearchByKeyword","keyword","getMovieDetails","movieId","getCredits","cast","getReviews","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","then","catch","error","console","log","finally","length","map","review","author","content","id"],"sourceRoot":""}