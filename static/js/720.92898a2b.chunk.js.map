{"version":3,"file":"static/js/720.92898a2b.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCAAwCC,IADxC,cACjBE,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAkB,mCAAG,WAAMC,GAAN,uFACPP,EAAAA,EAAAA,IAAA,+BACKC,EADL,4DACgEM,IAFzD,cACxBJ,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,sDAOlBG,EAAe,mCAAG,WAAMC,GAAN,uFACJT,EAAAA,EAAAA,IAAA,gBACVS,EADU,oBACSR,EADT,oBADI,cACrBE,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAOfM,EAAU,mCAAG,WAAMD,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBACVS,EADU,4BACiBR,EADjB,oBADD,cAChBE,EADgB,yBAIfA,EAASC,KAAKO,MAJC,2CAAH,sDAOVC,EAAU,mCAAG,WAAMH,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBACVS,EADU,4BACiBR,EADjB,2BADD,cAChBE,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,qD,iGC7BVQ,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wJAWVE,EAAYF,EAAAA,GAAAA,GAAH,+C,SCXTG,EAAO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACfC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,SAACN,EAAD,WACE,SAACH,EAAD,CAAYU,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAArD,SACGG,EAAKK,SAFML,EAAKE,GADR,KASpB,C,mICfYI,EAAcd,EAAAA,GAAAA,MAAH,yKAQXe,EAASf,EAAAA,GAAAA,OAAH,8P,SCwBnB,EA9BmB,SAAC,GAAsB,IAApBgB,EAAmB,EAAnBA,aACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,kBAAMC,SANa,SAAAC,GACnBA,EAAEC,iBACFN,EAAaE,EAAMK,cACpB,EAGC,WACE,SAACT,EAAD,CACEU,KAAK,OACLC,KAAK,QACLC,WAAS,EACTR,MAAOA,EACPS,SAhBe,SAAAN,GACnBF,EAASE,EAAEO,OAAOV,MACnB,KAgBG,SAACH,EAAD,CAAQS,KAAK,SAAb,SAAsB,aAG3B,E,QC1BYK,EAAU7B,EAAAA,GAAAA,EAAH,iECsCpB,EAjCe,WACb,OAAsCiB,EAAAA,EAAAA,UAAS,IAA/C,eAAOa,EAAP,KAAoBC,EAApB,KACA,GAA8Bd,EAAAA,EAAAA,WAAS,GAAvC,eAAOe,EAAP,KAAgBC,EAAhB,KACA,GAAkChB,EAAAA,EAAAA,WAAS,GAA3C,eAAOiB,EAAP,KAAkBC,EAAlB,KAkBA,OACE,6BACE,SAAC,EAAD,CAAYnB,aAlBK,SAAAoB,GACnBH,GAAW,IAEXzC,EAAAA,EAAAA,IAAmB4C,GAChBC,MAAK,SAAAC,GACJP,EAAeO,GACU,IAAzBA,EAAcC,QAAgBJ,GAAa,EAC5C,IACAK,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPX,GAAW,EACZ,GACJ,IAKID,IAAW,SAACa,EAAA,EAAD,IACXf,IAAe,SAAC3B,EAAA,EAAD,CAAMC,MAAO0B,IAC5BI,IACC,SAACL,EAAD,UAAS,wDAIhB,C","sources":["api.js","components/List/List.styled.jsx","components/List/List.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '233297d4a0bf302b0bc846d2e5d7a397';\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const getSearchByKeyword = async keyword => {\n    const response = await axios.get(\n        `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n    );\n    return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getCredits = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkMovies = styled(Link)`\n  color: darkblue;\n  font-size: 20px;\n  font-weight: 500;\n  text-decoration: none;\n\n  &:hover {\n    color: #951d08;\n  }\n`;\n\nexport const MovieItem = styled.dt`\n  margin-bottom: 8px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { LinkMovies, MovieItem } from './List.styled';\n\nexport const List = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <dl>\n      {films.map(film => (\n        <MovieItem key={film.id}>\n          <LinkMovies to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </LinkMovies>\n        </MovieItem>\n      ))}\n    </dl>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SearchInput = styled.input`\n  height: 36px;\n  background-color: rgb(247, 210, 79);\n  border-color: darkblue;\n  color: darkblue;\n  font-size: 18px;\n  font-weight: 600;\n`;\nexport const Button = styled.button`\n  height: 40px;\n  width: 120px;\n  background-color: darkblue;\n  color: rgb(247, 210, 79);\n  border-radius: 4px;\n  border: 2px solid darkblue;\n  font-size: 16px;\n  font-weight: 400;\n\n  &:hover {\n    color: #951d08;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchInput, Button } from './SearchForm.styled';\n\nconst SearchForm = ({ searchMovies }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    searchMovies(value.toLowerCase());\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SearchInput\n        type=\"text\"\n        name=\"value\"\n        autoFocus\n        value={value}\n        onChange={handleChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  searchMovies: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n`;\n","import { useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { List } from 'components/List/List';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { getSearchByKeyword } from 'api';\nimport { Message } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [listEmpty, setListEmpty] = useState(false);\n\n  const searchMovies = MovieValue => {\n    setLoading(true);\n\n    getSearchByKeyword(MovieValue)\n      .then(searchResults => {\n        setSearchFilms(searchResults);\n        searchResults.length === 0 && setListEmpty(true);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <main>\n      <SearchForm searchMovies={searchMovies} />\n      {loading && <Loader />}\n      {searchFilms && <List films={searchFilms} />}\n      {listEmpty && (\n        <Message>Sorry, there aren't any film you are looking for.</Message>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getTrending","response","data","results","getSearchByKeyword","keyword","getMovieDetails","movieId","getCredits","cast","getReviews","LinkMovies","styled","Link","MovieItem","List","films","location","useLocation","map","film","to","id","state","from","title","SearchInput","Button","searchMovies","useState","value","setValue","onSubmit","e","preventDefault","toLowerCase","type","name","autoFocus","onChange","target","Message","searchFilms","setSearchFilms","loading","setLoading","listEmpty","setListEmpty","MovieValue","then","searchResults","length","catch","error","console","log","finally","Loader"],"sourceRoot":""}