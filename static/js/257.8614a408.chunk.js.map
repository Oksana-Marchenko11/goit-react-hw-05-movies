{"version":3,"file":"static/js/257.8614a408.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCAAwCC,IADxC,cACjBE,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAkB,mCAAG,WAAMC,GAAN,uFACPP,EAAAA,EAAAA,IAAA,+BACKC,EADL,4DACgEM,IAFzD,cACxBJ,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,sDAOlBG,EAAe,mCAAG,WAAMC,GAAN,uFACJT,EAAAA,EAAAA,IAAA,gBACVS,EADU,oBACSR,EADT,oBADI,cACrBE,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAOfM,EAAU,mCAAG,WAAMD,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBACVS,EADU,4BACiBR,EADjB,oBADD,cAChBE,EADgB,yBAIfA,EAASC,KAAKO,MAJC,2CAAH,sDAOVC,EAAU,mCAAG,WAAMH,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBACVS,EADU,4BACiBR,EADjB,2BADD,cAChBE,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,qD,qJC7BVQ,EAASC,EAAAA,GAAAA,OAAH,qRAgBNC,EAAYD,EAAAA,GAAAA,IAAH,wDAKTE,EAAaF,EAAAA,GAAAA,GAAH,6CAIVG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,wJ,SCqErB,EA3FqB,WAAO,IAAD,IACjBL,GAAYU,EAAAA,EAAAA,MAAZV,QACR,GAAwCW,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAiBjB,IAfAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,IAEXhB,EAAAA,EAAAA,IAAgBC,GACbmB,MAAK,SAAAC,GACJP,EAAgBO,EACjB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPV,GAAW,EACZ,GACJ,GAAE,CAACf,IAECY,EAAL,CAIA,MAQIA,GAAgB,CAAC,EAPnBc,EADF,EACEA,MACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,OACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,eAGF,OACE,iCACE,SAAC,KAAD,CAAMC,GAAE,oBAAEjB,EAASkB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,SAAC/B,EAAD,CAAQgC,KAAK,SAAb,SAAsB,cAEvBtB,IAAW,SAACuB,EAAA,EAAD,IAEXzB,IACC,UAACN,EAAD,YACE,gBACEgC,MAAM,QACNC,IACER,EAAW,yCAC2BA,GAD3B,6EAIbS,IAAKR,KAEP,4BACE,0BACGN,EAAM,KAAGC,EAAac,MAAM,EAAG,GAAG,QAErC,yBAAG,eAAab,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,wBACGC,EAAOY,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,aAOzB,mBACA,4BACE,wBAAI,4BACJ,UAACtC,EAAD,YACE,yBACE,SAACC,EAAD,CAAUyB,GAAG,OAAOC,MAAO,CAAEC,KAAMnB,EAASkB,MAAMC,MAAlD,SAA0D,YAI5D,yBACE,SAAC3B,EAAD,CAAUyB,GAAG,UAAUC,MAAO,CAAEC,KAAMnB,EAASkB,MAAMC,MAArD,SAA6D,kBAKjE,mBACA,SAAC,KAAD,SA9DL,CAkEF,C","sources":["api.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '233297d4a0bf302b0bc846d2e5d7a397';\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const getSearchByKeyword = async keyword => {\n    const response = await axios.get(\n        `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n    );\n    return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getCredits = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button`\n  height: 40px;\n  width: 120px;\n  background-color: darkblue;\n  color: rgb(247, 210, 79);\n  border-radius: 4px;\n  border: 2px solid darkblue;\n  font-size: 16px;\n  font-weight: 400;\n  margin-bottom: 8px;\n\n  &:hover {\n    color: #951d08;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 24px;\n`;\n\nexport const DetailList = styled.ul`\n  list-style: none;\n`;\n\nexport const LinkInfo = styled(Link)`\n  color: darkblue;\n  font-size: 20px;\n  font-weight: 500;\n  text-decoration: none;\n\n  &:hover {\n    color: #951d08;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Button, Container, LinkInfo, DetailList } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [moviesDetail, setMoviesDetail] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getMovieDetails(movieId)\n      .then(detailMovie => {\n        setMoviesDetail(detailMovie);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  if (!moviesDetail) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = moviesDetail || {};\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <Button type=\"button\">Go back</Button>\n      </Link>\n      {loading && <Loader />}\n\n      {moviesDetail && (\n        <Container>\n          <img\n            width=\"300px\"\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n            }\n            alt={original_title}\n          />\n          <div>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {popularity}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </Container>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <DetailList>\n          <li>\n            <LinkInfo to=\"cast\" state={{ from: location.state.from }}>\n              Cast\n            </LinkInfo>\n          </li>\n          <li>\n            <LinkInfo to=\"reviews\" state={{ from: location.state.from }}>\n              Reviews\n            </LinkInfo>\n          </li>\n        </DetailList>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","getTrending","response","data","results","getSearchByKeyword","keyword","getMovieDetails","movieId","getCredits","cast","getReviews","Button","styled","Container","DetailList","LinkInfo","Link","useParams","useState","moviesDetail","setMoviesDetail","loading","setLoading","location","useLocation","useEffect","then","detailMovie","catch","error","console","log","finally","title","release_date","popularity","overview","genres","poster_path","original_title","to","state","from","type","Loader","width","src","alt","slice","map","genre","name","id"],"sourceRoot":""}