{"version":3,"file":"static/js/736.32e0fef1.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCAAwCC,IADxC,cACjBE,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKXC,EAAkB,mCAAG,WAAMC,GAAN,uFACPP,EAAAA,EAAAA,IAAA,+BACKC,EADL,4DACgEM,IAFzD,cACxBJ,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,sDAOlBG,EAAe,mCAAG,WAAMC,GAAN,uFACJT,EAAAA,EAAAA,IAAA,gBACVS,EADU,oBACSR,EADT,oBADI,cACrBE,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAOfM,EAAU,mCAAG,WAAMD,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBACVS,EADU,4BACiBR,EADjB,oBADD,cAChBE,EADgB,yBAIfA,EAASC,KAAKO,MAJC,2CAAH,sDAOVC,EAAU,mCAAG,WAAMH,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBACVS,EADU,4BACiBR,EADjB,2BADD,cAChBE,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,qD,yIC9BVQ,EAAWC,EAAAA,GAAAA,GAAH,6CAIRC,EAAYD,EAAAA,GAAAA,EAAH,8C,SC2CtB,EA3Ca,WACX,IAAQL,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IAEXX,EAAAA,EAAAA,IAAWD,GACRc,MAAK,SAAAL,GACJC,EAAUD,EACX,IACAM,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPP,GAAW,EACZ,GACJ,GAAE,CAACZ,KAGF,2BACGW,IAAW,SAACS,EAAA,EAAD,KACZ,SAAChB,EAAD,UACGK,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OACV,2BACE,gBACEC,MAAM,QACNC,IACEL,EAAY,yCAC0BA,GAD1B,6EAIdM,IAAKL,KAEP,SAAClB,EAAD,UAAYmB,KACZ,yBAAG,cAAYC,OAXRJ,EADC,QAkBnB,C","sources":["api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '233297d4a0bf302b0bc846d2e5d7a397';\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const getSearchByKeyword = async keyword => {\n    const response = await axios.get(\n        `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n    );\n    return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getCredits = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n`;\n\nexport const ActorName = styled.p`\n  font-weight: bold;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getCredits } from 'api';\nimport { Loader } from 'components/Loader/Loader';\nimport { CastList, ActorName } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getCredits(movieId)\n      .then(actors => {\n        setActors(actors);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <CastList>\n        {actors.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n              }\n              alt={original_name}\n            />\n            <ActorName>{name}</ActorName>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </CastList>\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["axios","API_KEY","getTrending","response","data","results","getSearchByKeyword","keyword","getMovieDetails","movieId","getCredits","cast","getReviews","CastList","styled","ActorName","useParams","useState","actors","setActors","loading","setLoading","useEffect","then","catch","error","console","log","finally","Loader","map","id","profile_path","original_name","name","character","width","src","alt"],"sourceRoot":""}